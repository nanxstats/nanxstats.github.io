<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Nan Xiao | 肖楠</title>
    <link>https://nanx.me/</link>
    <description>Recent content in Home on Nan Xiao | 肖楠</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 26 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://nanx.me/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Build a PC During the Great GPU Shortage</title>
      <link>https://nanx.me/blog/post/build-a-pc-during-the-great-gpu-shortage/</link>
      <pubDate>Sun, 26 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/build-a-pc-during-the-great-gpu-shortage/</guid>
      <description>Apparently, I underestimated the severity of the ongoing GPU shortage when I decided to Marie Kondo my previous PC build and build a new one: people almost cannot find ANY graphics cards at a reasonable price for a custom build. After checking a few prebuilt options where one does not need to find a card, I still feel all the options out there are not optimal.
Nevertheless, my solution is to find the cheapest possible “new previous generation” card, and not compromising any other components.</description>
    </item>
    
    <item>
      <title>Rebranding R Packages with Hexagon Stickers: A Minimalist Approach</title>
      <link>https://nanx.me/blog/post/rebranding-r-packages-with-hexagon-stickers/</link>
      <pubDate>Mon, 08 Feb 2021 01:30:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/rebranding-r-packages-with-hexagon-stickers/</guid>
      <description>A new hex sticker wall of my R packages.
 I have built a few R packages over the years. I have always been adding some forms of an ad hoc logo to them, trying to make a visual impression. As the portfolio size grows larger, I realized that I would need a principled way to create the logos and refresh my packages’ look. Hexagon stickers seem to be an acceptable form of logos that are heavily used by the R community.</description>
    </item>
    
    <item>
      <title>Bayesian Lasso with greta</title>
      <link>https://nanx.me/blog/post/bayesian-lasso-with-greta/</link>
      <pubDate>Mon, 07 Dec 2020 20:00:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/bayesian-lasso-with-greta/</guid>
      <description>The R code to reproduce the results is available from GitHub Gist.
 Horseshoe Bend, Arizona. Photo by Madeline Pere.
 Although I am not an expert in Bayesian statistics, I always have an idealized version of the framework for Bayesian modeling in my mind:
 Allows defining data models intuitively — preferably in native R. Handles the low-level computations such as MCMC automatically. Works on both CPU and GPU seamlessly would be perfect for 2020.</description>
    </item>
    
    <item>
      <title>Tanka: A Minimalist Bootstrap 4 Theme for Hugo and Blogdown</title>
      <link>https://nanx.me/blog/post/hugo-tanka-theme-bootstrap/</link>
      <pubDate>Mon, 23 Nov 2020 22:00:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/hugo-tanka-theme-bootstrap/</guid>
      <description>TL;DR: I have rewritten the Hugo Tanka theme entirely using Bootstrap 4 while still keeping its original look and feel. This should also fix the compatibility issues from Hugo version updates.
 A screenshot of the updated Hugo Tanka theme.
 Almost three years ago, when I first started blogging with Hugo/blogdown, I forked and modified a Hugo theme Black &amp;amp; Light, and named it Tanka (Repo, Live Preview).</description>
    </item>
    
    <item>
      <title>Fuzz Testing Your R Code</title>
      <link>https://nanx.me/blog/post/fuzz-testing-your-r-code/</link>
      <pubDate>Mon, 28 Sep 2020 22:30:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/fuzz-testing-your-r-code/</guid>
      <description>Good software requires even better testing. Particularly, unit testing has been widely used by many R packages as a tool for reducing the number of bugs and improving code structure. A unit test is often written when a single unit of functionality is created in the program. Is there a good way to test a large program or system after it is created? The answer is yes, and one of the approaches people developed is fuzz testing.</description>
    </item>
    
    <item>
      <title>Migrating from Disqus to Utterances</title>
      <link>https://nanx.me/blog/post/migrating-from-disqus-to-utterances/</link>
      <pubDate>Sat, 19 Sep 2020 23:00:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/migrating-from-disqus-to-utterances/</guid>
      <description>Safari 14 introduced a new UI component that I cannot love more: a privacy report detailing all the third-party trackers blocked by WebKit’s Intelligent Tracking Prevention (ITP). Following this progress and removing Google Analytics last year, I decide to finish my part today by purging Disqus (comes with unsolicited tracking) from this website.
Privacy Report in Safari 14 showing the cross-site trackers that Intelligent Tracking Prevention (ITP) blocked.</description>
    </item>
    
    <item>
      <title>Customize Syntax Highlighting for R distill Websites</title>
      <link>https://nanx.me/blog/post/distill-syntax-highlight/</link>
      <pubDate>Fri, 22 May 2020 00:30:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/distill-syntax-highlight/</guid>
      <description>“Diversity is essential to happiness, and in Utopia there is hardly any.” (Bertrand Russell) Photo by @chuttersnap.
 The Problem The distill (formerly radix) package offers an excellent option in the R Markdown ecosystem to create beautifully typed websites. I was using it one day and looking into customizing the syntax highlighting theme. Then I found this issue:
 I was a bit surprised and sad that there is no easy way to customize it.</description>
    </item>
    
    <item>
      <title>Disposable Computing with callr</title>
      <link>https://nanx.me/blog/post/disposable-computing-with-callr/</link>
      <pubDate>Sat, 11 Apr 2020 17:30:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/disposable-computing-with-callr/</guid>
      <description>Photo by @uniqueton.
 Runtime errors can be tricky and costly to resolve for any programming language, and these errors frequently happen when managing (file) connections. Boris posted such an issue when using my R package Rcpi. I rephrase it here as:
library(&amp;quot;Rcpi&amp;quot;) dir.create(&amp;quot;test&amp;quot;) for (i in 1:2000) { file.copy( system.file(&amp;quot;compseq/DB00530.sdf&amp;quot;, package = &amp;quot;Rcpi&amp;quot;), paste0(&amp;quot;test/&amp;quot;, i, &amp;quot;.sdf&amp;quot;) ) } fns &amp;lt;- list.files(&amp;quot;test/&amp;quot;, pattern = &amp;quot;.sdf$&amp;quot;, full.names = TRUE) for (i in 1:length(fns)) { cat(&amp;quot;\014&amp;quot;, i, &amp;quot;\n&amp;quot;) Rcpi::convMolFormat(infile = fns[i], outfile = &amp;quot;temp.</description>
    </item>
    
    <item>
      <title>Self-Hosting Shiny Apps with Linode and Cloudflare</title>
      <link>https://nanx.me/blog/post/self-host-shiny-apps/</link>
      <pubDate>Wed, 26 Feb 2020 01:00:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/self-host-shiny-apps/</guid>
      <description>After procrastinating for some time, I finally set up a dedicated self-hosting server, nanx.app, for my public shiny apps. From now on, most of the web applications listed on my software page will be available from two mirrors — the self-hosting server and the public cloud hosting solution shinyapps.io kindly provided by RStudio.
A collection of my shiny apps, now also self-hosted.
 The Motivation I have built many shiny apps over the years — a few of them are public and open source.</description>
    </item>
    
    <item>
      <title>New Packages on CRAN: tidycwl and biocompute</title>
      <link>https://nanx.me/blog/post/tidycwl-biocompute/</link>
      <pubDate>Sat, 14 Dec 2019 00:30:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/tidycwl-biocompute/</guid>
      <description>On the journey of achieving reproducibility in genomic data analysis projects, one often faces challenges with documenting workflows and computations systematically. To provide one way for tackling these problems, we (me and my colleagues) have recently released two new R packages — tidycwl and biocompute — to CRAN.
tidycwl As the name implies, the package tidycwl aims at offering a native toolchain for R to analyze tools and workflows written in the Common Workflow Language (CWL), while following the tidyverse design principles.</description>
    </item>
    
    <item>
      <title>Building Regularized Logistic Regressions from Scratch with Computational Graphs in R</title>
      <link>https://nanx.me/blog/post/cgraph-logreg/</link>
      <pubDate>Sun, 06 Oct 2019 00:30:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/cgraph-logreg/</guid>
      <description>The R package built for this post is available on GitHub: nanxstats/logreg.
Update 2020-02-11: there has been some major API updates and improvements since cgraph 5.0.0. The logreg package is now updated to reflect these changes. The code example in this post is updated, too.
As one of the cornerstones for deep learning frameworks, automatic differentiation was briefly mentioned in our previous post. Today let’s focus on the other important piece: the computational graph.</description>
    </item>
    
    <item>
      <title>Peak Experience</title>
      <link>https://nanx.me/blog/post/peak-experience/</link>
      <pubDate>Wed, 02 Oct 2019 22:30:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/peak-experience/</guid>
      <description>Photo by Elena Prokofyeva.
 I feel that we have previously talked a lot about the material world in this blog. Today I want to briefly discuss something more spiritual, something in my mind for a while: peak experience.
This concept belongs to the self-actualization part described in Maslow’s “hierarchy of needs”. The peculiar thing is, I knew what the feeling was but cannot express it verbally, until the day I knew the term coined by the psychologists.</description>
    </item>
    
    <item>
      <title>64GB RAM</title>
      <link>https://nanx.me/blog/post/64gb-ram/</link>
      <pubDate>Tue, 11 Jun 2019 22:30:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/64gb-ram/</guid>
      <description>In 2018, I built a PC to train models with GPU. Besides the GPU, the machine has a 6-core (12 threads) CPU and 32GB of RAM. The hardware was nothing fancy compared to a lot of deep learning builds but gets the job done.
Recently, I experienced an issue that probably all R users experienced: running out of memory. Not for training neural networks, but for training some more traditional statistical learning models.</description>
    </item>
    
    <item>
      <title>Removing Google Analytics from All My Websites</title>
      <link>https://nanx.me/blog/post/remove-google-analytics/</link>
      <pubDate>Mon, 28 Jan 2019 15:30:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/remove-google-analytics/</guid>
      <description>Like cameras, online trackers are everywhere. Photo by Matthew Henry.
 What happened After using it (or being used) for about ten years, today I consciously removed the Google Analytics tracking code from all the personal websites I control, including this blogdown (Hugo) site, the pkgdown sites for my R packages, and my Shiny apps. I never felt better, as from now on, people are browsing my websites tracking-free.</description>
    </item>
    
    <item>
      <title>A List of Awesome Shiny Extension Packages</title>
      <link>https://nanx.me/blog/post/awesome-shiny-extensions/</link>
      <pubDate>Tue, 04 Dec 2018 14:30:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/awesome-shiny-extensions/</guid>
      <description>“Everything looks official with tiny leaves around it.” Original photo by Kelli Tungay.
  TL;DR: here is a curated list of R packages that offer extended UI or server components for Shiny: nanxstats/awesome-shiny-extensions. Pull requests welcomed!
 Five years ago, I wrote my first research software paper, and it eventually got published in Bioinformatics. If you know me, it’s probably not surprising that the paper was about an R package and a companion Shiny app.</description>
    </item>
    
    <item>
      <title>Renga: A Clean Bootstrap 4 Theme for Hugo and Blogdown</title>
      <link>https://nanx.me/blog/post/hugo-renga-theme/</link>
      <pubDate>Sat, 10 Nov 2018 23:30:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/hugo-renga-theme/</guid>
      <description>For a long time, I have been maintaining my homepage and the portfolio pages (software, papers) with HTML purely written by hand. Skeleton was my frontend framework for about five years, then I switched to Bootstrap 4 this year. After I (re)-started blogging at the end of last year, things got a bit complicated. The blog and the portfolio pages don’t get a consistent look (the</description>
    </item>
    
    <item>
      <title>General-Purpose Programming with R</title>
      <link>https://nanx.me/blog/post/general-purpose-programming-with-r/</link>
      <pubDate>Thu, 25 Oct 2018 23:30:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/general-purpose-programming-with-r/</guid>
      <description>“They’ll take your soul if you let them — don’t let them.” (Carole King, You’ve Got a Friend) Photo by Jelleke Vanooteghem.
  I used R for almost every single computational task I do on my computer in the past ten years. I use R for things that are not simply statistics (pun intended), but everything related to data, or everything that can be done programmatically.
Recently, I found a fascinating thread posted in the r/rstats subreddit.</description>
    </item>
    
    <item>
      <title>The Accidental Product Success</title>
      <link>https://nanx.me/blog/post/accidental-product-success/</link>
      <pubDate>Mon, 15 Oct 2018 21:30:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/accidental-product-success/</guid>
      <description>A roadmap may tell how you can get there but doesn’t tell you where to go. Photo by @slidebean.
 Technology companies are sometimes quirky but always quite interesting.
Often, we can witness accidental epic wins in products that don’t belong to a company’s main offerings. A few examples from the (almost) trillion dollar club:
Microsoft is a software company, but they have made some excellent hardware products, especially accessories.</description>
    </item>
    
    <item>
      <title>Implementing Triplet Losses for Implicit Feedback Recommender Systems with R and Keras</title>
      <link>https://nanx.me/blog/post/triplet-loss-r-keras/</link>
      <pubDate>Wed, 29 Aug 2018 19:30:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/triplet-loss-r-keras/</guid>
      <description>All the R code for this post is available on GitHub: nanxstats/deep-learning-recipes.
Photo: Three Palms by Jamie Davies
 At the end of our last post, I briefly mentioned that the triplet loss function is a more proper loss designed for both recommendation problems with implicit feedback data and distance metric learning problems. For its importance in solving these practical problems, and also as an excellent programming exercise, I decided to implement it with R and Keras.</description>
    </item>
    
    <item>
      <title>How a Financial Crisis Started</title>
      <link>https://nanx.me/blog/post/how-a-financial-crisis-started/</link>
      <pubDate>Wed, 29 Aug 2018 14:30:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/how-a-financial-crisis-started/</guid>
      <description>Photo by Ablimit Ablet on Unsplash
 I once read a joke with some dry humor a long time ago. It’s almost a parable about how the system amplifies fragility. I’m not entirely sure where it originated, but here you go:
 A bunny bounced into a bakery and asked the baker: “do you have 100 croissants?”
The baker: “Ahh, I’m so sorry we don’t have that many.”</description>
    </item>
    
    <item>
      <title>Prototyping a Recommender System for Binary Implicit Feedback Data with R and Keras</title>
      <link>https://nanx.me/blog/post/recsys-binary-implicit-feedback-r-keras/</link>
      <pubDate>Wed, 22 Aug 2018 17:30:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/recsys-binary-implicit-feedback-r-keras/</guid>
      <description>Ten years ago, the Netflix prize competition made a significant impact on recommender systems research. In the same time, such benchmark datasets, including MovieLens, are a bit misleading: in reality, implicit feedback data, or binary implicit feedback data (someone interacted with something) could be the best we can have. One to five star ratings type of continuous response data could be challenging to get or impossible to measure.</description>
    </item>
    
    <item>
      <title>Building My First Deep Learning Machine</title>
      <link>https://nanx.me/blog/post/building-my-first-deep-learning-machine/</link>
      <pubDate>Mon, 20 Aug 2018 15:00:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/building-my-first-deep-learning-machine/</guid>
      <description>Five years ago, GNOME 3’s immaturity was one of the reasons for me to switch to a Mac. After finished watching two seasons of Mr. Robot, I somehow missed it. With my AWS/GCP bills going up quite a bit recently, I quickly decided to invest a little and build a PC to retry the Linux desktop environment, also, to tackle some personal machine learning projects.
Hardware Here is my PCPartPicker part list for the parts of choice.</description>
    </item>
    
    <item>
      <title>My OCD for Inbox Zero</title>
      <link>https://nanx.me/blog/post/my-ocd-for-inbox-zero/</link>
      <pubDate>Wed, 15 Aug 2018 21:00:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/my-ocd-for-inbox-zero/</guid>
      <description>Inbox zero means having zero unread emails in your email’s inbox. I have an OCD for it.
Photo: Fraser Valley, British Columbia, Canada.
 Many years ago, like many people, I used to “mark as unread” some emails I received, when I cannot decide to reply or not reply immediately for whatever reasons.
Obviously, pretending things as unread is not an effective strategy to get them done. I didn’t reply to the things I want to say yes quickly enough, which could make people think that I’m not interested.</description>
    </item>
    
    <item>
      <title>John M. Chambers Award, Product Sense, and the Feature Roadmap for liftr</title>
      <link>https://nanx.me/blog/post/jmc-award/</link>
      <pubDate>Mon, 30 Jul 2018 23:30:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/jmc-award/</guid>
      <description>I feel super honored to say that I have received the 2018 John M. Chambers Statistical Software Award from the American Statistical Association this year, for my R package liftr on reproducible research. This year’s award also has another recipient: Dustin Tran, for his excellent Python library Edward on probabilistic programming. We just had a great session of invited talks today at the 2018 Joint Statistical Meetings in Vancouver, Canada.</description>
    </item>
    
    <item>
      <title>It Has Been 15 Years Since MSBlast</title>
      <link>https://nanx.me/blog/post/15-years-since-msblast/</link>
      <pubDate>Sun, 15 Jul 2018 00:20:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/15-years-since-msblast/</guid>
      <description>It was August 2003, when I was in the 8th grade, enjoying the summer break.
One day, my dad came home from work. He tried to call me during the day asking for help on some computer issues. Unfortunately, he couldn’t reach me because I was using the dial-up Internet with a good old 56k modem, so the landline was busy the whole time. (You’ll know what I mean if you’re old enough.</description>
    </item>
    
    <item>
      <title>Save the Link Like a Boss</title>
      <link>https://nanx.me/blog/post/save-the-link-like-a-boss/</link>
      <pubDate>Sun, 01 Jul 2018 17:00:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/save-the-link-like-a-boss/</guid>
      <description>Photo: Middle of Nowhere by David Kovalenko
  Anything posted on the Internet, stays there forever.
 I’m a firm believer of such assertions. The reality is, however, even if something is published on the Internet, due to technical reasons, it still probably won’t live there forever. The situation becomes more like
 If something isn’t on the web, it doesn’t exist at all.
 Yes, as time goes, content on the Internet fades away.</description>
    </item>
    
    <item>
      <title>Learn to Say No The Hard Way</title>
      <link>https://nanx.me/blog/post/learn-to-say-no-the-hard-way/</link>
      <pubDate>Thu, 28 Jun 2018 16:00:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/learn-to-say-no-the-hard-way/</guid>
      <description>Photo by Esteban Lopez.
 Sometimes I feel guilty that I have not been able to do some real impactful research during my PhD studies. Although, I feel blessed that I have super cool advisors, who have taught me things that are even more important than doing good research. One particular thing I learned, is about saying no – I was terrible at it, and honestly, still learning more about it.</description>
    </item>
    
    <item>
      <title>Shiny Now Supports Async Execution</title>
      <link>https://nanx.me/blog/post/shiny-async/</link>
      <pubDate>Mon, 21 May 2018 14:15:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/shiny-async/</guid>
      <description>Shiny is my favorite web application framework. It is simply awesome. Shiny 1.1.0 was released to CRAN last week. This update brings probably the most significant feature/improvement in recent years: async execution support. With the help of future, promises (computer science people surely knew how to name abstract things…), and this shiny update, you can now write scalable web applications using Shiny.
You Want It When? (Zootopia)
  In brief, if you have some long-running computations (such as querying a remote database, live fitting a statistical model) in your Shiny app, that computation would block additional users to use the app simultaneously, until that computation is finished.</description>
    </item>
    
    <item>
      <title>An HTTPS-Censored Future</title>
      <link>https://nanx.me/blog/post/https-censored-future/</link>
      <pubDate>Fri, 18 May 2018 15:50:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/https-censored-future/</guid>
      <description>The Fall of Phaeton by Peter Paul Rubens, c. 1604/1605. National Gallery of Art.
 The Good News One of the good news from the past weeks is that GitHub Pages finally supports HTTPS for custom domains. The feature that people waited forever eventually arrived. Although this is not too late, we have to admit, moving items out of “backlog” and “roadmap” and implement them can be a lengthy process.</description>
    </item>
    
    <item>
      <title>Taking the Long View</title>
      <link>https://nanx.me/blog/post/taking-the-long-view/</link>
      <pubDate>Wed, 02 May 2018 05:40:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/taking-the-long-view/</guid>
      <description>The world is a fast-changing place. Eleven years ago, when iPhone was first launched, people probably didn’t anticipate that was the end of Nokia. Today, I don’t even use the voice calling feature on my phone anymore, unless really necessary. This might not be good news for AT&amp;amp;T, and maybe I’m an outlier, but this is the truth, this is the world we live.
After walking a long road in such a changing world, it is easy to forget why we started at first.</description>
    </item>
    
    <item>
      <title>10 Things That Matter in Deep Learning (1/5)</title>
      <link>https://nanx.me/blog/post/10-things-matter-in-deep-learning-1/</link>
      <pubDate>Thu, 12 Apr 2018 17:00:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/10-things-matter-in-deep-learning-1/</guid>
      <description>Heart of the Matter by Otis Kaye, 1963. The Art Institute of Chicago.
 Admit it or not, neural networks (or more broadly, connectionism) are being revived to readdress almost all problems in the machine learning world. Before deep learning, there were a few much smaller hypes like matrix factorization, sparse learning, and kernel methods, but none of them is comparable to this one. Never before has a learning method been so blessed by capital, yet so cursed by it.</description>
    </item>
    
    <item>
      <title>The Return of the Native Font Stack</title>
      <link>https://nanx.me/blog/post/the-return-of-the-native-font-stack/</link>
      <pubDate>Tue, 13 Mar 2018 02:20:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/the-return-of-the-native-font-stack/</guid>
      <description>Photo: Lead type
 As people said, web design is 95% typography. Once upon a time, people who care about the typography of their website define their font stack using CSS like this:
font-family: &amp;quot;Lucida Sans Unicode&amp;quot;, &amp;quot;Lucida Grande&amp;quot;, sans-serif; They secretly wish their website could look different from the mortal websites which use Times New Roman, Arial, or Georgia with the funny-looking numerals.
Until one day, their sincerity impressed the god of typography, who granted them a technology named web fonts.</description>
    </item>
    
    <item>
      <title>3 Simple Criteria for Choosing Open Source Projects</title>
      <link>https://nanx.me/blog/post/choose-open-source-projects/</link>
      <pubDate>Mon, 12 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/choose-open-source-projects/</guid>
      <description>As programming languages and their ecosystems evolve, we have many more powerful tools in our toolbox(es) than ten years ago. Ideas are also becoming cheaper than ever, especially when we want to implement them as open source projects. Everything looks like a nail when we have a mighty hammer. We may come up with five ideas in the morning every day. While at the end of the day, we may</description>
    </item>
    
    <item>
      <title>Nothing Without Love</title>
      <link>https://nanx.me/blog/post/nothing-without-love/</link>
      <pubDate>Thu, 15 Feb 2018 21:00:00 -0500</pubDate>
      
      <guid>https://nanx.me/blog/post/nothing-without-love/</guid>
      <description>Nate Ruess’s songs have magnificent voices and amazing arrangements, while often unbelievably sad at their cores, such as Grammy’s favourite “We Are Young”. This one, on the other hand, is an exception.
 Send up a signal, that everything’s fine
Come on slide up right here by my side
You know that I, I want to rest in your light
 Photo: Wind turbine near North Kingstown, RI, from the morning train to NYC.</description>
    </item>
    
    <item>
      <title>Buzzword Map, or Buzz World Map</title>
      <link>https://nanx.me/blog/post/buzzword-map-or-buzz-world-map/</link>
      <pubDate>Sat, 13 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/buzzword-map-or-buzz-world-map/</guid>
      <description>I don’t always care about popular topics because they usually fade fast. But when I do, here is a 2017 world interest map for deep learning, artificial intelligence, and blockchain (courtesy of Google Trends, where you can reproduce it).
Figure: Google Trends — comparing the search traffic in 2017.
 The dominant color shown in each region represents the most searched term there. The question is, what does this map tell us — everything, or nothing at all?</description>
    </item>
    
    <item>
      <title>Papers in My Heart (2017)</title>
      <link>https://nanx.me/blog/post/papers-in-my-heart-2017/</link>
      <pubDate>Sun, 31 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://nanx.me/blog/post/papers-in-my-heart-2017/</guid>
      <description>Figure: Album cover for Skip to the Good Part by He Is We, 2011.
  It is the last day of 2017. Looking back, it has been another fruitful year for statistical and machine intelligence research. Notably, a lot of new ideas have been published in the direction of deep learning. Although it is intriguing, I will probably talk about things I care about in deep learning in another post.</description>
    </item>
    
    <item>
      <title>Tanka: A Minimalist Theme for Hugo and Blogdown</title>
      <link>https://nanx.me/blog/post/hugo-tanka-theme/</link>
      <pubDate>Wed, 27 Dec 2017 07:00:00 -0500</pubDate>
      
      <guid>https://nanx.me/blog/post/hugo-tanka-theme/</guid>
      <description>I used to mention creating a purely R-based static website generator named Haiku with my then classmate Arjun about two years ago. I remember that he said the name was nice.
Time flies, and apparently, I did not have the chance to build it. Fortunately, Yihui saved the world again, and now blogdown has become the most elegant and powerful static website generator for R users, especially if you love R Markdown.</description>
    </item>
    
    <item>
      <title>Collected Wisdom</title>
      <link>https://nanx.me/blog/post/collected-wisdom/</link>
      <pubDate>Wed, 27 Dec 2017 03:00:00 -0500</pubDate>
      
      <guid>https://nanx.me/blog/post/collected-wisdom/</guid>
      <description>Here I will post some collected quotes that influenced my opinion on how learning, inference, and science should be. Choose problems One thing Grothendieck said was that one should never try to prove anything that is not almost obvious. This does not mean that one should not be ambitious in choosing things to work on. Rather, “if you don’t see that what you are</description>
    </item>
    
    <item>
      <title>Time Marches On</title>
      <link>https://nanx.me/blog/post/time-marches-on/</link>
      <pubDate>Tue, 26 Dec 2017 09:31:00 -0500</pubDate>
      
      <guid>https://nanx.me/blog/post/time-marches-on/</guid>
      <description>It’s a new start. Let’s have some fun.</description>
    </item>
    
    <item>
      <title>Books</title>
      <link>https://nanx.me/books/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://nanx.me/books/</guid>
      <description>Original R for Clinical Study Reports and Submission (2021, work in progress) Translation 应用预测建模 (2016) Translated from Applied Predictive Modeling (2013) R数据可视化手册 (2014) Translated from R Graphics Cookbook (2013) ggplot2: 数据分析与图形艺术 (2013) Translated from ggplot2: Elegant Graphics for Data Analysis (2009) R语言实战 (2013) Translated from R</description>
    </item>
    
    <item>
      <title>Colophon</title>
      <link>https://nanx.me/colophon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://nanx.me/colophon/</guid>
      <description> Typography  Source Sans Pro designed by Paul D. Hunt  Content  Site generator: blogdown, driven by Hugo Theme: hugo-nanx2021, built on Bootstrap 5 Commenting: utterances  Editing  R Markdown: RStudio Desktop HTML, CSS, JavaScript: Visual Studio Code  </description>
    </item>
    
    <item>
      <title>Papers</title>
      <link>https://nanx.me/papers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://nanx.me/papers/</guid>
      <description>Google Scholar &amp;middot; ORCID &amp;middot; ResearchGate &amp;middot; Erdős number  2021  Bioinformatics tools developed to support BioCompute Objects. Janisha A Patel, Dennis A Dean, Charles Hadley King, Nan Xiao, Soner Koc, Ekaterina Minina, Anton Golikov, Phillip Brooks, Robel Kahsay, Rahi Navelkar, Manisha Ray, Dave Roberson, Chris Armstrong, Raja Mazumder, Jonathon Keeney. Database 2021: 1&amp;ndash;13, 2021.  2020  BCO App: tools for generating BioCompute Objects from next-generation sequencing workflows and computations [version 1; peer review: 2 approved].</description>
    </item>
    
    <item>
      <title>Software</title>
      <link>https://nanx.me/software/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://nanx.me/software/</guid>
      <description>R packages I build R packages to improve my workflow. Infrastructure and automation pkglite Compact package representations CRAN | GitHub Statistical machine learning msaenet Multi-step adaptive estimation for sparse regressions CRAN | GitHub | Paper stackgbm Minimalist implementation of model stacking for gradient boosted tree models built by xgboost, lightgbm, and catboost GitHub oneclust Maximum homogeneity clustering for univariate data CRAN | GitHub logreg Regularized logistic regressions with computational graphs</description>
    </item>
    
    <item>
      <title>Talks</title>
      <link>https://nanx.me/talks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://nanx.me/talks/</guid>
      <description> Talks  pkglite: compact package representations R Consortium R Submissions Working Group, 2021 Old Methods with New Tricks: Our Solution for the PrecisionFDA Brain Cancer Predictive Modeling &amp;amp; Biomarker Discovery Challenge 9th Annual Health Informatics &amp;amp; Data Science Virtual Symposium at Georgetown University, 2020 Video recording - starts at 03:07:30 liftr: an R Package for Persistent Reproducible Research Joint Statistical Meetings 2018 Persistent Reproducible Reporting with Docker and R China R Conference 2017 Reproducible Dynamic Report Generation with Docker and R DockerCon 2017 Cancer Genomics Cloud &amp;amp; R Boston R/Bioconductor for Genomics Meetup, 2017 High-Dimensional Survival Modeling with Shiny Shiny Developer Conference 2016 Video recording Introduction to Reproducible Research in Bioinformatics CRI Bioinformatics Workshop, University of Chicago, 2015 liftr &amp;amp; sbgr kickstart BioC 2015: Where Software and Biology Connect Web Scraping with R China R Conference 2013  Posters  The Deep Connection between Drugs and Side Effects ISMB/ECCB 2017 DockFlow: Bioc Workflow Containerization and Orchestration with liftr BioC 2017: Where Software and Biology Connect ChromaClust: Latent Color Topic Modeling for Images HGEN 48600/STAT 35450, 2016 liftr: Reproducible Bioinformatics and Statistical Data Analysis with Docker, Rabix, and knitr BioC 2015: Where Software and Biology Connect  </description>
    </item>
    
  </channel>
</rss>
