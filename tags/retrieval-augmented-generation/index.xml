<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>retrieval-augmented generation on Nan Xiao | 肖楠</title>
    <link>https://nanx.me/tags/retrieval-augmented-generation/</link>
    <description>Recent content in retrieval-augmented generation on Nan Xiao | 肖楠</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 16 Jan 2025 02:11:00 +0000</lastBuildDate>
    <atom:link href="https://nanx.me/tags/retrieval-augmented-generation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introducing pkglite for Python</title>
      <link>https://nanx.me/blog/post/pkglite-python/</link>
      <pubDate>Thu, 16 Jan 2025 02:11:00 +0000</pubDate>
      <guid>https://nanx.me/blog/post/pkglite-python/</guid>
      <description>Les Menuires, France. Photo by Yann Allegre. I am pleased to introduce pkglite for Python, now available on PyPI. pkglite for Python provides a minimalist framework for packing source packages written in any programming language into a text file and restoring them to their original directory structure. You can install it with:&#xA;pip install pkglite For installation as a global command-line tool, use pipx:&#xA;pipx install pkglite Context Four years ago, we released the R package pkglite, designed for bidirectional conversion of R packages.</description>
    </item>
    <item>
      <title>Prompt LLMs with R Package Source Code Using pkglite</title>
      <link>https://nanx.me/blog/post/pkglite-llm-prompt/</link>
      <pubDate>Thu, 28 Mar 2024 20:00:00 +0000</pubDate>
      <guid>https://nanx.me/blog/post/pkglite-llm-prompt/</guid>
      <description>Illustration from Google DeepMind. Artist: Martina Stiftinger. Sometimes, large language models (LLMs) answer coding questions by making up software behaviors or APIs that don’t exist. A simple but effective strategy to minimize such hallucination problems is to feed the exact, complete source code as context in the prompt. For code organized in R packages, it is tedious to copy the file contents and construct them into prompts manually. Fortunately, you can use pkglite to automate this process.</description>
    </item>
  </channel>
</rss>
