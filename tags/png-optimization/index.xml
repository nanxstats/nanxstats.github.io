<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PNG optimization on Nan Xiao | 肖楠</title>
    <link>https://nanx.me/tags/png-optimization/</link>
    <description>Recent content in PNG optimization on Nan Xiao | 肖楠</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 09 Apr 2023 00:30:00 +0000</lastBuildDate>
    <atom:link href="https://nanx.me/tags/png-optimization/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Compressing PNG Output for R Packages with pngquant and ragg</title>
      <link>https://nanx.me/blog/post/rpkgs-pngquant-ragg/</link>
      <pubDate>Sun, 09 Apr 2023 00:30:00 +0000</pubDate>
      <guid>https://nanx.me/blog/post/rpkgs-pngquant-ragg/</guid>
      <description>Cassette collection. Photo by Jametlene Reskp. Introduction Dealing with large-scale image outputs in R packages can be challenging, especially when it comes to passing CRAN checks. In this post, I will share my experience in using pngquant and ragg to compress the PNG output size for readme and vignettes. This allows R packages with many figures in their documentation to pass the CRAN checks without compromising image quality.
Problem description I encountered a problem with my package, ggsci, which outputs approximately 30 example figures from both vignettes and README.</description>
    </item>
  </channel>
</rss>
