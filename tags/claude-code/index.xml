<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Claude Code on Nan Xiao | 肖楠</title>
    <link>https://nanx.me/tags/claude-code/</link>
    <description>Recent content in Claude Code on Nan Xiao | 肖楠</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 15 Aug 2025 01:32:00 +0000</lastBuildDate>
    <atom:link href="https://nanx.me/tags/claude-code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Markdown Stupefy: Tidy AI Text in VS Code</title>
      <link>https://nanx.me/blog/post/vscode-markdown-stupefy/</link>
      <pubDate>Fri, 15 Aug 2025 01:32:00 +0000</pubDate>
      <guid>https://nanx.me/blog/post/vscode-markdown-stupefy/</guid>
      <description>The extension name was inspired by the “stupefy mode” described in the SmartyPants project written by John Gruber, the creator of Markdown. If you copy AI responses into Markdown, you will often get curly quotes, em dashes, emoji, and other smart punctuation. They look fine, but they are Unicode characters that can trip linters and clutter diffs. So I built a tiny tool to fix that.&#xA;Automate tidying AI text Markdown Stupefy is a VS Code extension that normalizes smart punctuation to plain ASCII, removes emoji, and cleans up trailing whitespace.</description>
    </item>
    <item>
      <title>Refactoring the GPU Selector App with Claude Code: A Vibe Coding Experiment</title>
      <link>https://nanx.me/blog/post/claude-code-vibe-refactor/</link>
      <pubDate>Fri, 13 Jun 2025 01:03:00 +0000</pubDate>
      <guid>https://nanx.me/blog/post/claude-code-vibe-refactor/</guid>
      <description>Desk setup with plants. Photo by Amari James. In January 2023, I built a basic, interactive deep learning GPU selector app inspired by Tim Dettmers’ popular guide. The original project was a pure HTML + JavaScript + CSS “vibe coding” experiment, driven by chat with GPT-3.5, which was the SOTA at the time. While the core logic worked, I did not focus much on its UI or UX.&#xA;Now, two and a half years later, I wanted to see how far agentic coding assistants have come, by refactoring the app with modern tools and design sensibilities.</description>
    </item>
  </channel>
</rss>
